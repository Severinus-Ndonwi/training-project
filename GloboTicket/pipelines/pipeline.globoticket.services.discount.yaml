# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  none
  # branches:
  #   include:
  #   - containarized_aks_allup
  # paths:
  #   include:
  #   - GloboTicket/GloboTicket.Services.Discount/*
  #   - GloboTicket/aks-globoticket.services.discount.yaml

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '02e076ef-03bf-495b-bb34-d499c56b86a0'
  imageRepository: 'globoticket.services.discount'
  containerRegistry: 'globoticketsacr.azurecr.io'
  dockerfilePath: 'GloboTicket/GloboTicket.Services.Discount/Dockerfile'
  tag: '$(Build.BuildId)'
  deploymentFile: 'aks-globoticket.services.discount.yaml'
  # - group: acr-registry

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        buildContext: $(Build.SourcesDirectory)/GloboTicket
        tags: |
          $(tag)

- stage: Deploy
  displayName: Deploy to k8s
  jobs:  
  - job: Deploy
    displayName: Deploy to k8s
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: replacetokens@3
      inputs:
        rootDirectory: '$(Build.SourcesDirectory)/GloboTicket'
        targetFiles: '$(deploymentFile)'
        encoding: 'auto'
        writeBOM: true
        actionOnMissing: 'warn'
        keepToken: false
        tokenPrefix: '#{'
        tokenSuffix: '}#'
        useLegacyPattern: false
        enableTelemetry: true
    # - task: Kubernetes@1
    #   inputs:
    #     connectionType: 'Kubernetes Service Connection'
    #     kubernetesServiceEndpoint: 'globoticket-aks'
    #     namespace: 'default'
    #     command: 'apply'
    #     useConfigurationFile: true
    #     configuration: '$(Build.SourcesDirectory)/GloboTicket/$(deploymentFile)'
    #     secretType: 'dockerRegistry'
    #     containerRegistryType: 'Azure Container Registry'
    #     azureSubscriptionEndpointForSecrets: 'MVPSponsorship (e57087a4-a053-48c9-8857-995316398cdc)'
    #     azureContainerRegistry: 'globoticket.azurecr.io'
    #     secretName: 'pullkey'
    - task: Kubernetes@1
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'cloudpro k8s svc connecton'
        namespace: 'cloudpro'
        command: 'apply'
        useConfigurationFile: true
        configuration: '$(Build.SourcesDirectory)/GloboTicket/$(deploymentFile)'
        secretType: 'dockerRegistry'
        containerRegistryType: 'Container Registry'
        dockerRegistryEndpoint: 'CloudPro Registry'
        secretName: 'acr-secret'
    # - task: Bash@3
    #   inputs:
    #     targetType: 'inline'
    #     script: |
    #       # Write your commands here
    #       kubectl create secret docker-registry acr-secret --docker-server=$(registryServer) --docker-username=$(registryUser) --docker-password='$(registryPassword)'--namespace=$(current_namespace)
